<?php

/**
 * Basefornecedor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nome
 * @property string $sigla
 * @property contrato_fornecedor $contrato_fornecedor
 * @property Doctrine_Collection $fornSlaFinanceiro
 * 
 * @method string              getNome()                Returns the current record's "nome" value
 * @method string              getSigla()               Returns the current record's "sigla" value
 * @method contrato_fornecedor getContratoFornecedor()  Returns the current record's "contrato_fornecedor" value
 * @method Doctrine_Collection getFornSlaFinanceiro()   Returns the current record's "fornSlaFinanceiro" collection
 * @method fornecedor          setNome()                Sets the current record's "nome" value
 * @method fornecedor          setSigla()               Sets the current record's "sigla" value
 * @method fornecedor          setContratoFornecedor()  Sets the current record's "contrato_fornecedor" value
 * @method fornecedor          setFornSlaFinanceiro()   Sets the current record's "fornSlaFinanceiro" collection
 * 
 * @package    usuario
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basefornecedor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fornecedor');
        $this->hasColumn('nome', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('sigla', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('contrato_fornecedor', array(
             'local' => 'id',
             'foreign' => 'fornecedor_id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('sla_financeiro as fornSlaFinanceiro', array(
             'local' => 'id',
             'foreign' => 'fornecedor_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}