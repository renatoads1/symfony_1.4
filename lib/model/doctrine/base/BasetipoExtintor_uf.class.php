<?php

/**
 * BasetipoExtintor_uf
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $extintor_tipo_id
 * @property integer $uf_id
 * @property extintor_tipo $extintor_tipo
 * @property sfGuardUf $sfGuardUf
 * 
 * @method integer         getExtintorTipoId()   Returns the current record's "extintor_tipo_id" value
 * @method integer         getUfId()             Returns the current record's "uf_id" value
 * @method extintor_tipo   getExtintorTipo()     Returns the current record's "extintor_tipo" value
 * @method sfGuardUf       getSfGuardUf()        Returns the current record's "sfGuardUf" value
 * @method tipoExtintor_uf setExtintorTipoId()   Sets the current record's "extintor_tipo_id" value
 * @method tipoExtintor_uf setUfId()             Sets the current record's "uf_id" value
 * @method tipoExtintor_uf setExtintorTipo()     Sets the current record's "extintor_tipo" value
 * @method tipoExtintor_uf setSfGuardUf()        Sets the current record's "sfGuardUf" value
 * 
 * @package    usuario
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetipoExtintor_uf extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tipo_extintor_uf');
        $this->hasColumn('extintor_tipo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('uf_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 13,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('extintor_tipo', array(
             'local' => 'extintor_tipo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUf', array(
             'local' => 'uf_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}