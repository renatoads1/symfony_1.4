<?php

/**
 * BasesfGuardContractAfiliado
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $afiliado_id
 * @property integer $contract_id
 * @property Afiliado $Afiliado
 * @property sfGuardContract $Contract
 * 
 * @method integer                 getAfiliadoId()  Returns the current record's "afiliado_id" value
 * @method integer                 getContractId()  Returns the current record's "contract_id" value
 * @method Afiliado                getAfiliado()    Returns the current record's "Afiliado" value
 * @method sfGuardContract         getContract()    Returns the current record's "Contract" value
 * @method sfGuardContractAfiliado setAfiliadoId()  Sets the current record's "afiliado_id" value
 * @method sfGuardContractAfiliado setContractId()  Sets the current record's "contract_id" value
 * @method sfGuardContractAfiliado setAfiliado()    Sets the current record's "Afiliado" value
 * @method sfGuardContractAfiliado setContract()    Sets the current record's "Contract" value
 * 
 * @package    usuario
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardContractAfiliado extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_contract_afiliado');
        $this->hasColumn('afiliado_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('contract_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Afiliado', array(
             'local' => 'afiliado_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardContract as Contract', array(
             'local' => 'contract_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}