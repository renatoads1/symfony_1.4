<?php

/**
 * CabecalhoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CabecalhoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CabecalhoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Cabecalho');
    }

    /**
     * Retorna cabecalhos a partir da UF e do Tipo de preventiva.
     *
     * @return objetos do tipo Cabecalho
     */
    public function getCabecalhoPorTipo ($uf, $preventiva_tipo_id) {
    	return $this->addCabecalhoPorTipoQuery(null, $uf, $preventiva_tipo_id)->execute();
    }

    /**
     * Retorna uma query com os cabecalhos a partir da UF e do Tipo de preventiva
     *
     * @return objeto do tipo Query
     */
  	public function addCabecalhoPorTipoQuery(Doctrine_Query $q = null, $uf, $preventiva_tipo_id) {
    		
  		if (is_null($q)) {
  			$q = Doctrine_Query::create()
  				->from('cabecalho c');
  		}

  		$alias = $q->getRootAlias();

        $q->leftJoin($alias.'.preventiva_tipo p');        
        $q->where('p.id = ?', $preventiva_tipo_id); 
        $q->leftJoin($alias.'.sfGuardUf u');
        $q->where('u.name = ?', $uf);

  		return $q;
  	}

    /**
     * Retorna cabecalhos a partir da UF e dos Tipos de preventiva.
     *
     * @return objetos do tipo Cabecalho
     */
    public function getCabecalhoPorLocalidade($uf, $preventiva_tipo_id, $preventivasProximas) {
      return $this->addCabecalhoPorLocalidadeQuery(null, $uf, $preventiva_tipo_id, $preventivasProximas)->execute();
    }

    /**
     * Retorna uma query com os cabecalhos a partir da UF e do Tipo de preventiva
     *
     * @return objeto do tipo Query
     */
    public function addCabecalhoPorLocalidadeQuery(Doctrine_Query $q = null, $uf, $preventiva_tipo_id, $preventivasProximas) {
        
      if (is_null($q)) {
        $q = Doctrine_Query::create()
          ->from('cabecalho c');
      }

      $alias = $q->getRootAlias();

      $q->leftJoin($alias.'.sfGuardUf u');
      $q->where('u.name = ?', $uf);
      $q->leftJoin($alias.'.preventiva_tipo p');        
      
      $aux = 'p.id = '.$preventiva_tipo_id;

      if(count($preventivasProximas) > 0){
        for($x = 0; $x < count($preventivasProximas); $x++){
          $aux = $aux.' OR p.id = '.$preventivasProximas[$x]->getPreventivaTipo()->getId();
        }
      }

      $q->andWhere($aux);
      $q->groupBy($alias.'.id');

      return $q;
    }

    /**
     * Retorna cabecalhos a partir da UF e dos Tipos de preventiva.
     *
     * @return objetos do tipo Cabecalho
     */
    public function getCabecalhoPorVinculacao($uf, $preventiva_tipo_id, $preventivasProximas) {
      return $this->addCabecalhoPorVinculacaoQuery(null, $uf, $preventiva_tipo_id, $preventivasProximas)->execute();
    }

    /**
     * Retorna uma query com os cabecalhos a partir da UF e do Tipo de preventiva
     *
     * @return objeto do tipo Query
     */
    public function addCabecalhoPorVinculacaoQuery(Doctrine_Query $q = null, $uf, $preventiva_tipo_id, $preventivasProximas) {
        
      if (is_null($q)) {
        $q = Doctrine_Query::create()
          ->from('cabecalho c');
      }

      $alias = $q->getRootAlias();

      $q->leftJoin($alias.'.sfGuardUf u');
      $q->where('u.name = ?', $uf);
      $q->leftJoin($alias.'.preventiva_tipo p');        
      
      $aux = 'p.id = '.$preventiva_tipo_id;

      if(count($preventivasProximas) > 0){
        for($x = 0; $x < count($preventivasProximas); $x++){
          $aux = $aux.' OR p.id = '.$preventivasProximas[$x]->getPreventiva()->getPreventivaTipo()->getId();
        }
      }

      $q->andWhere($aux);
      $q->groupBy($alias.'.id');

      return $q;
    }
}