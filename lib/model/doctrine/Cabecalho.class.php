<?php

/**
 * Cabecalho
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    usuario
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Cabecalho extends BaseCabecalho
{
    /**
     * Retorna itens de cabecalhos de um determinado cabecalho
     *
     * @return array item_cabecalho
     */
	public function getItensCabecalho()
	{
	  $q = Doctrine_Query::create()
	    ->from('item_cabecalho j')
	    ->where('j.cabecalho_id = ?', $this->getId());
	 
	  return Doctrine_Core::getTable('item_cabecalho')->getItensCabecalho($q);
	}

    /**
     * Formatar nome do cabecalho
     *
     * @return nome formatado
     */
	public function formatarNome()
	{
      //Remover acentos e caracteres especiais
         $conversao = array('Š'=>'S', 'š'=>'s', 'Ž'=>'Z', 'ž'=>'z', 'À'=>'A', 'Á'=>'A', 'Â'=>'A', 'Ã'=>'A', 'Ä'=>'A', 'Å'=>'A', 'Æ'=>'A', 'Ç'=>'C', 'È'=>'E', 'É'=>'E', 'Ê'=>'E', 'Ë'=>'E', 'Ì'=>'I', 'Í'=>'I', 'Î'=>'I', 'Ï'=>'I', 'Ñ'=>'N', 'Ò'=>'O', 'Ó'=>'O', 'Ô'=>'O', 'Õ'=>'O', 'Ö'=>'O', 'Ø'=>'O', 'Ù'=>'U', 'Ú'=>'U', 'Û'=>'U', 'Ü'=>'U', 'Ý'=>'Y', 'Þ'=>'B', 'ß'=>'Ss', 'à'=>'a', 'á'=>'a', 'â'=>'a', 'ã'=>'a', 'ä'=>'a', 'å'=>'a', 'æ'=>'a', 'ç'=>'c', 'è'=>'e', 'é'=>'e', 'ê'=>'e', 'ë'=>'e', 'ì'=>'i', 'í'=>'i', 'î'=>'i', 'ï'=>'i', 'ð'=>'o', 'ñ'=>'n', 'ò'=>'o', 'ó'=>'o', 'ô'=>'o', 'õ'=>'o', 'ö'=>'o', 'ø'=>'o', 'ù'=>'u', 'ú'=>'u', 'û'=>'u', 'ý'=>'y', 'þ'=>'b', 'ÿ'=>'y');

        $nomeFormatado = ereg_replace("[^a-zA-Z0-9_/]", "_", strtr($this->getNome(), $conversao));

		return strtolower($nomeFormatado);
	}

    /**
     * Retorna tipos de preventiva do cabecalho
     *
     * @return array item_cabecalho
     */
    public function getTipoPreventivaCabecalho()
    {
      $tipos = $this->getPreventivaTipoCabecalho();
      //$aux = $tipos[0]->getPreventivaTipo()->getNome();
      $aux = "tipo";


      for ($i=0; $i < count($tipos); $i++) { 
        $aux = $aux." ".$tipos[$i]->getPreventivaTipo()->getNome();
      }

      return $aux;
    }



}