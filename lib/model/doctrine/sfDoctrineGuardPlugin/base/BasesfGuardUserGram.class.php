<?php

/**
 * BasesfGuardUserGram
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $gram_id
 * @property sfGuardUser $User
 * @property sfGuardGram $Gram
 * 
 * @method integer         getUserId()  Returns the current record's "user_id" value
 * @method integer         getGramId()  Returns the current record's "gram_id" value
 * @method sfGuardUser     getUser()    Returns the current record's "User" value
 * @method sfGuardGram     getGram()    Returns the current record's "Gram" value
 * @method sfGuardUserGram setUserId()  Sets the current record's "user_id" value
 * @method sfGuardUserGram setGramId()  Sets the current record's "gram_id" value
 * @method sfGuardUserGram setUser()    Sets the current record's "User" value
 * @method sfGuardUserGram setGram()    Sets the current record's "Gram" value
 * 
 * @package    usuario
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUserGram extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_gram');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('gram_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardGram as Gram', array(
             'local' => 'gram_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}