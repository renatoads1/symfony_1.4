<?php

/**
 * BasesfGuardLastPassword
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $password
 * @property boolean $is_active
 * @property sfGuardUser $User
 * 
 * @method integer             getUserId()    Returns the current record's "user_id" value
 * @method string              getPassword()  Returns the current record's "password" value
 * @method boolean             getIsActive()  Returns the current record's "is_active" value
 * @method sfGuardUser         getUser()      Returns the current record's "User" value
 * @method sfGuardLastPassword setUserId()    Sets the current record's "user_id" value
 * @method sfGuardLastPassword setPassword()  Sets the current record's "password" value
 * @method sfGuardLastPassword setIsActive()  Sets the current record's "is_active" value
 * @method sfGuardLastPassword setUser()      Sets the current record's "User" value
 * 
 * @package    usuario
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardLastPassword extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_last_password');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}