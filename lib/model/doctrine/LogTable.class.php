<?php

/**
 * LogTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class LogTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object LogTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('Log');
  }

  /*
   * Retonar o numero de reprogramações de acordo com o id
   */
   public function countReprogramacao(Doctrine_Query $q = null, $id)
   {
     return $this->addCountReprogramacaoQuery($q, $id)->execute(array(), Doctrine_Core::HYDRATE_NONE);
   }


   /*
    * Query para recuperar log
    */
   public function addCountReprogramacaoQuery(Doctrine_Query $q = null, $id)
   {
      $q = Doctrine_Query::create()
         ->select('COUNT(j.id)')
         ->from('Log j')
         ->andWhere('j.chamado_id = ?', $id)
         ->andWhere('j.acao = ?', "Reprogramar data de execução");


      return $q;
   }


  /*
   * Retonar datas da reprogramacao
   */
   public function datasReprogramacao(Doctrine_Query $q = null, $id)
   {
     return $this->addDatasReprogramacaoQuery($q, $id)->execute(array(), Doctrine_Core::HYDRATE_NONE);
   }


   /*
    * Query para recuperar datas da reprogramacao
    */
   public function addDatasReprogramacaoQuery(Doctrine_Query $q = null, $id)
   {
      $q = Doctrine_Query::create()
         ->select('j.data_hora')
         ->from('Log j')
         ->Where('j.manutencao = ?', 'corretiva')
         ->andWhere('j.chamado_id = ?', $id)
         ->andWhere('j.acao = ?', "Reprogramar data de execução");

      return $q;
   }

  /*
   * Query historico
   */
   public function addHistoricoQuery(Doctrine_Query $q = null, $id, $manutencao)
   {     
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Log j');
     }

     $alias = $q->getRootAlias();
     $q->Where($alias.'.manutencao = ?', $manutencao);
     $q->andWhere($alias.'.chamado_id = ?', $id);

      return $q;

   }


  /*
   * Retonar historico
   */
   public function getHistorico(Doctrine_Query $q = null, $id, $manutencao)
   {
      return $this->addHistoricoQuery($q, $id, $manutencao)->execute();
   }


  /*
   * Query historico
   */
   public function addReabertosQuery(Doctrine_Query $q = null, $id)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Log j');
     }

     $alias = $q->getRootAlias();
     $q->andWhere($alias.'.chamado_id = ?', $id);
     $q->andWhere($alias.'.acao like ?', "%Copiar%");
     $q->orderBy($alias.'.created_at DESC');
     
      return $q;

   }


  /*
   * Retonar historico
   */
   public function getReabertos(Doctrine_Query $q = null, $id)
   {
      return $this->addReabertosQuery($q, $id)->execute();
   }

   /*
   * Query ultimo registro
   */
   public function addRegistroQuery(Doctrine_Query $q = null, $id, $manutencao)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Log j');
     }

     $alias = $q->getRootAlias();
     $q->andWhere($alias.'.chamado_id = ?', $id);
     $q->andWhere($alias.'.manutencao = ?', $manutencao);
     $q->orderBy($alias.'.id DESC');
     $q->limit(1);

     return $q;

   }


  /*
   * Retonar ultimo registro
   */
   public function ultimoRegistro(Doctrine_Query $q = null, $id, $manutencao)
   {
      return $this->addRegistroQuery($q, $id, $manutencao)->execute();
   }

   /*
    * Retonar chamados ativos
    */
   public function getLogs(Doctrine_Query $q = null, $uf, $gram, $contrato, $grupo)
   {
    return $this->addLogsQuery($q, $uf, $gram, $contrato, $grupo)->execute();
   }

   /*
    * Query chamados ativos
    */
   public function addLogsQuery(Doctrine_Query $q = null, $uf, $gram, $contrato, $grupo)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Log j');
     }

     $alias = $q->getRootAlias();
     
       if(count($uf)>0){
         $aux = $alias.'.estado = "'.$uf[0]->getName().'"';

         for($x = 1; $x < count($uf); $x++){
           $aux = $aux." OR ".$alias.'.estado = "'.$uf[$x]->getName().'"';
         }

         $q->andWhere($aux);

       }

      //gram
       if(count($gram)>0){
         
         if($grupo->getName() == "Fornecedor"){
           $aux1 = $alias.'.gram_atendimento = "'.$gram[0]->getName().'"';
        
           for($x = 1; $x < count($gram); $x++){
             $aux1 = $aux1." OR ".$alias.'.gram_atendimento = "'.$gram[$x]->getName().'"';
           }
         } 
         else{
           $aux1 = $alias.'.gram = "'.$gram[0]->getName().'"';
        
           for($x = 1; $x < count($gram); $x++){
             $aux1 = $aux1." OR ".$alias.'.gram = "'.$gram[$x]->getName().'"';
           }
         }  

         $q->andWhere($aux1);
       }  

     //contrato
       if(count($contrato)>0){
         //$q->innerJoin($alias.'.chamado a');
         $aux2 = $alias.'.contrato = "'.$contrato[0]->getName().'"';

         for($x = 0; $x < count($contrato); $x++){
            $aux2 = $aux2." OR ".$alias.'.contrato = "'.$contrato[$x]->getName().'"';
         }

         $q->andWhere($aux2);

       }

      $q->orderBy($alias.'.created_at DESC');

      return $q;
   }


  /*
   * Query conferir se chamado passou por aguardando verba
   */
   public function addConfirmarStatusQuery(Doctrine_Query $q = null, $id)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Log j');
     }

     $alias = $q->getRootAlias();
     $q->andWhere($alias.'.chamado_id = ?', $id);
     $q->andWhere($alias.'.manutencao = ?', "corretiva");
     $q->andWhere($alias.'.acao = ?', "Aguardar disponibilidade de verba");
     $q->orderBy($alias.'.id DESC');

     return $q;

   }   
   
     /*
   * Conferir se chamado passou por aguardando verba
   */
   public function confirmarStatus(Doctrine_Query $q = null, $id)
   {
      return $this->addConfirmarStatusQuery($q, $id)->execute();
   }
   
   
   
  /*
   * Retonar se o chamado foi reaberto
   */
   public function getFoiReaberto(Doctrine_Query $q = null, $id)
   {
      return $this->addReaberto($q, $id)->execute();
   }
   
  /*
   * Query historico
   */
   public function addReaberto(Doctrine_Query $q = null, $id)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
        ->select('id, chamado_id, justificativa_status, data_hora') 
		->from('Log j');
     }

	 $texto = 'Copiar chamado n° '. $id;	

     $alias = $q->getRootAlias();
	 $q->andWhere($alias.'.acao = ?',  $texto );
      return $q;

   }


 
   
}
