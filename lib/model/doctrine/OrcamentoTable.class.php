<?php

/**
 * OrcamentoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class OrcamentoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object OrcamentoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Orcamento');
    }


   /*
    * Retonar orcamentos confeccionados
    */
   public function getOrcamentos(Doctrine_Query $q = null, $uf, $gram, $contrato)
   {
     return $this->addOrcamentosQuery($q, $uf, $gram, $contrato)->execute();
   }


    /*
    * Query para recuperar orcamentos
    */
   public function addOrcamentosQuery(Doctrine_Query $q = null, $uf, $gram, $contrato)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Orcamento j');
     }

     $alias = $q->getRootAlias();
     $q->leftJoin($alias.'.Controle a');

       //uf
       if(count($uf)>0){
         $aux = 'a.estado = "'.$uf[0]->getName().'"';

         for($x = 1; $x < count($uf); $x++){
           $aux = $aux.' OR a.estado = "'.$uf[$x]->getName().'"';
         }

         $q->andWhere($aux);

       }

     //gram
       if(count($gram)>0){
         $aux1 = 'a.gram = "'.$gram[0]->getName().'"';

         for($x = 1; $x < count($gram); $x++){
           $aux1 = $aux1.' OR a.gram = "'.$gram[$x]->getName().'"';
         }

         $q->andWhere($aux1);
       }

     //contrato
       if(count($contrato)>0){
         //$q->innerJoin($alias.'.chamado a');
         $aux2 = 'a.contrato = "'.$contrato[0]->getName().'"';

         for($x = 0; $x < count($contrato); $x++){
            $aux2 = $aux2.' OR a.contrato = "'.$contrato[$x]->getName().'"';
         }

         $q->andWhere($aux2);

       }

     $q->orderBy($alias.'.created_at DESC');

     return $q;
   }

    /*
    * Query para recuperar orcamentos
    */
   public function addOrcamentoStatusQuery(Doctrine_Query $q = null, $status, $uf, $gram, $contrato)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Orcamento j');
     }

     $alias = $q->getRootAlias();
     $q->leftJoin($alias.'.Controle a');

       //uf
       if(count($uf)>0){
         $aux = 'a.estado = "'.$uf[0]->getName().'"';

         for($x = 1; $x < count($uf); $x++){
           $aux = $aux.' OR a.estado = "'.$uf[$x]->getName().'"';
         }

         $q->andWhere($aux);

       }

     //gram
       if(count($gram)>0){
         $aux1 = 'a.gram = "'.$gram[0]->getName().'"';

         for($x = 1; $x < count($gram); $x++){
           $aux1 = $aux1.' OR a.gram = "'.$gram[$x]->getName().'"';
         }

         $q->andWhere($aux1);
       }
    //contrato
       if(count($contrato)>0){
         //$q->innerJoin($alias.'.chamado a');
         $aux2 = 'a.contrato = "'.$contrato[0]->getName().'"';

         for($x = 0; $x < count($contrato); $x++){
            $aux2 = $aux2.' OR a.contrato = "'.$contrato[$x]->getName().'"';
         }

         $q->andWhere($aux2);

       }

     if($status=="Aprovado"){    
  //     $aguardandorf = "Executado(Aguardando Relatório Fotográfico)" ;
    //   $comrf = "Executados (Com Relatorio Fotografico)";

       $q->andWhere('a.status != "Aguardando disponibilidade de verba" AND a.status != "Cancelado" AND a.status != "Em confecção de orçamento" AND a.status!= "Em aprovação de orçamento"');
//       $q->andWhere('a.status = "Em analise pelo fornecedor" OR a.status = "Aguardando analise da Oi" OR a.status = "Em agendamento de execucao pelo fornecedor" OR a.status = "Em execucao" OR a.status = ?', $comrf);       

       //$q->orWhere('a.status = ?', $aguardandorf);
       //$q->orWhere('a.status = ?', $comrf);
       $q->orderBy($alias.'.data_hora DESC');

     }
     else{
       $q->andWhere('a.status = ?', $status);
       $q->orderBy($alias.'.created_at DESC');
     }

     //$q->orderBy($alias.'.created_at DESC');

     return $q;
   }


   /*
    * Retonar orcamento 
    */
   public function getOrcamento(Doctrine_Query $q = null, $id)
   {
    return $this->addOrcamentoQuery($q, $id)->execute();
   }

 

  /*
    * Query para recuperar orcamento
    */
   public function addOrcamentoQuery(Doctrine_Query $q = null, $id)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Orcamento j');
     }

     $alias = $q->getRootAlias();
     $q->andWhere($alias.'.controle_id = ?', $id);

      return $q;
   }


  /*
    * deletar orcamento
    */
   public function deletarOrcamento(Doctrine_Query $q = null)
   {
    return $this->addDeleteQuery($q, $id)->execute();
   }

 

  /*
    * Query para deletar orcamento
    */
   public function addDeleteQuery(Doctrine_Query $q = null, $id)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Orcamento j');
     }

     $alias = $q->getRootAlias();

     return $q;
   }  

   
   public function getOrcamentosPreventiva(Doctrine_Query $q = null, $uf, $gram)
   {
        return $this->getTodosOrcamentos($q, $uf, $gram)->execute();
   }

    
    public function getTodosOrcamentos(Doctrine_Collection $q = null, $uf, $gram)
  {
    if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->select('a.id, b.gram, b.sigla, c.nome') 
         ->from('preventiva a'); 
     }


     $alias = $q->getRootAlias();
     $q->leftJoin($alias.'.base_predial  b');
     $q->leftJoin($alias.'.preventiva_tipo c');
    
       //uf
       if(count($uf)>0){
        $aux = 'b.estado = "'.$uf[0]->getName().'"';

         for($x = 1; $x < count($uf); $x++){
           $aux = $aux.' OR b.estado = "'.$uf[$x]->getName().'"';
         }

         $q->andWhere($aux);

       }

     //gram
       if(count($gram)>0){
         $aux1 = 'b.gram = "'.$gram[0]->getName().'"';

         for($x = 1; $x < count($gram); $x++){
           $aux1 = $aux1.' OR b.gram = "'.$gram[$x]->getName().'"';
         }

         $q->andWhere($aux1);
       }

        $q->andWhere('a.orcamento_id is not null and a.status = "Finalizada"');
		$q->orderBy($alias.'.updated_at DESC');
        return $q;
}
 
}
