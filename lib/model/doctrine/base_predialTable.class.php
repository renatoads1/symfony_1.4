<?php

/**
 * Base_predialTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class base_predialTable extends Doctrine_Table
{
    static public $predios = array();

    /*
     * Retonar opcoes para o campo contratos
     */
    public function getTypes()
    {
      return self::$predios;
    }

    /**
     * Returns an instance of this class.
     *
     * @return object Base_predialTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Base_predial');
    }

   
   /*
    * Query siglas com base no estado
    */
   public function addSiglasQuery(Doctrine_Query $q = null, $estado)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Base_predial j');
     }

     $alias = $q->getRootAlias();

     $q->andWhere($alias.'.estado = ?', $estado);
     $q->addOrderBy('sigla');

      return $q;
   }

    /*
    * Retonar Siglas
    */
   public function getSiglas(Doctrine_Query $q = null, $estado)
   {
        return $this->addSiglasQuery($q, $estado)->execute();
   }



  /*
    * Retonar Siglas
    */
   public function getFlag($sigla)
   {
       return $this->addPrediosQuery($sigla)->execute();
   }





   /*
    * Retonar predios
    */
   public function getPredio(array $parameters)
   {
       return $this->addPrediosQuery($parameters['sigla'])->execute();
   }


   /*
    * Query predios com base nas siglas
    */
   public function addPrediosQuery($sigla)
   {
      $q = Doctrine_Query::create()
         ->from('Base_predial j')
         ->andWhere('j.sigla = ?', $sigla);

      return $q;
   }









   /*
    * Retonar Siglas que tem aquela sequencia de caracteres
    */
   public function getBuscaSiglas($sigla)
   {
       return $this->addPrediosLike('bet-oes')->execute();
   }


   /*
    * Query predios com base nas siglas
    */
   public function addPrediosLike($sigla)
   {
      $q = Doctrine_Query::create()
         ->from('Base_predial j')
         ->andWhere("j.sigla LIKE '%". $sigla."%'");
      return $q;
   }

 

  /*
    * Query predios com base nas siglas
    */
   public function addLocaisQuery(Doctrine_Query $q = null, $campo, $query, $estado)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Base_predial j');
     }

     $alias = $q->getRootAlias();

     $q->where($alias.'.estado = ?', $estado);
     $q->andWhere($alias.'.'.$campo.' like ?', '%'.$query.'%');
     $q->andWhere($alias.'.ativado = ?', 1);
     $q->addOrderBy($alias.'.'.$campo.' ASC');
     $q->limit(10);

      return $q;

   }

   /*
    * Retonar locais
    */
   public function getLocais(Doctrine_Query $q = null, $campo, $query, $estado)
   {
       return $this->addLocaisQuery($q, $campo, $query, $estado)->execute();
   }

    /*
    * Query predios atendidos em preventiva com base nas siglas
    */
   public function addLocaisPreventivaQuery(Doctrine_Query $q = null, $campo, $query, $estado)
   {
     if (is_null($q))
     {
      $q = Doctrine_Query::create()
         ->from('Base_predial j');
     }

     $alias = $q->getRootAlias();

    if(count($estado)>0){
      $aux = $alias.'.estado = "'.$estado[0]->getName().'"';

      for($x = 1; $x < count($estado); $x++){
        $aux = $aux." OR ".$alias.'.estado = "'.$estado[$x]->getName().'"';  
      } 

      $q->andWhere($aux);
    }

     $q->andWhere($alias.'.'.$campo.' like ?', '%'.$query.'%');
     $q->andWhere($alias.'.ativado = ?', 1);
     $q->andWhere($alias.'.flag = "Preventiva"');
     $q->addOrderBy($alias.'.'.$campo.' ASC');
     $q->limit(10);

     return $q;

   }  

   /*
    * Retonar locais atendidos na preventiva
    */
   public function getLocaisPreventiva(Doctrine_Query $q = null, $campo, $query, $estado)
   {
       return $this->addLocaisPreventivaQuery($q, $campo, $query, $estado)->execute();
   }


}
