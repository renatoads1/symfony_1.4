<?php

/**
 * VinculacaoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class VinculacaoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object VinculacaoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Vinculacao');
    }
	
	
	
	public function vincularPreventivas($preventivaPai, $preventivaFilho){
		 return $this->setPreventivasVinculadas($preventivaPai, $preventivaFilho)->execute();
	}	
	
	
 /**
  * Metodo responsavel por realizar a desvinculacao/vinculacao de preventivas quando elas forem REPROVADAS ou APROVADAS
  *
  */
	public function setPreventivasVinculadas($preventivaPai, $preventivaFilho) {
		//foreach ($preventivaFilho as $indice => $p){
			Doctrine_Core::getTable("Vinculacao")->setPreventivaPai($preventivaPai);
			Doctrine_Core::getTable("Vinculacao")->setPreventivaFilho($preventivaFilho);
			 return $p; 
		//} 
    }
	
	
	
	public function getVinculadas($preventiva_id){
		 return $this->hasPreventivasVinculadas($preventiva_id)->execute();
	}	
  
	
	public function hasPreventivasVinculadas($preventiva_id){
       $q = Doctrine_Query::create()
         ->from('Vinculacao v')
         ->where('v.preventiva_pai = ?', $preventiva_id);		
      return $q; 
	} 


 /**
  * Verificar se preventiva esta vinculada com outra
  *
  */
   public function verificarPreventivaFilha($preventiva_filho){
		 return $this->addPreventivaFilhaQuery($preventiva_filho)->execute();
	}	
	
	
 /**
  * Query para verificar se preventiva esta vinculada com outra
  *
  */
	public function addPreventivaFilhaQuery($preventiva_filho) {
		  $q = Doctrine_Query::create()
         ->from('Vinculacao v')
         ->where('v.preventiva_filho = ?', $preventiva_filho);		
      return $q; 
    }

/**
  * Verificar se preventiva e pai
  *
  */
   public function verificarPreventivaPai($preventiva_pai){
     return $this->addPreventivaPaiQuery($preventiva_pai)->execute();
  } 
  
  
 /**
  * Query para verificar se preventiva e pai
  *
  */
  public function addPreventivaPaiQuery($preventiva_pai) {
    $q = Doctrine_Query::create()
         ->from('Vinculacao v')
         ->where('v.preventiva_pai = ?', $preventiva_pai);    
      return $q; 
    }

	
/*
 * Query para deletar vinculacao
 */
 public function deleteVinculacao($idPreventiva, $itens) {
        $q = Doctrine_Query::create()
            ->from("Vinculacao v")
            ->delete()
            ->where("v.preventiva_pai = ?", $idPreventiva)
            ->andWhere("v.preventiva_filho = ?", $itens);

        $q->execute();
    }
	
  /*
   * Retorna vinculacao de determinada preventiva
   */
  public function verificarPreventivaVinculada(Doctrine_Query $q = null)
  {
    if (is_null($q))
    {
      $q = Doctrine_Query::create()
        ->from('Vinculacao v');
    }
 
    return $q->execute();
  }

}













